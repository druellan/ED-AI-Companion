import os

# The folder for the Elite Dangerous journal, usually you don't need to change this one
JOURNAL_DIRECTORY = os.path.join(
    os.environ["USERPROFILE"], "Saved Games", "Frontier Developments", "Elite Dangerous"
)

# Enter the API endpoint of the LLM service you want to use, the API Key and the model
LLM_ENDPOINT = "https://openrouter.ai/api/v1/"
LLM_API_KEY = (
    "[Your_Key]"
)
# The primary model to use, and a list of models to use if the primary model fails
LLM_MODEL_NAME = "google/gemini-2.0-flash-exp:free"
LLM_MODEL_NAMES = [
    "mistralai/mistral-nemo:free",
    "cognitivecomputations/dolphin3.0-mistral-24b:free",
]

# Use WINDOWS for the built in TTS Windows feature
# Use EDGE for the Edge Broser/Azure TTS service
# Note that WINDOWS is used as fallback in case EDGE is not available
TTS_TYPE = "EDGE"

# The voice to use for each of the TTS services
# TTS_WINDOWS_VOICE = "Microsoft Zira Desktop - English (United States)"
TTS_EDGE_VOICE = "en-GB-LibbyNeural"
TTS_EDGE_RATE = "+25%"
TTS_EDGE_VOLUME = "-50%"
TTS_EDGE_PITCH = "+0Hz"

# Microsoft Eva (Cortana's voice) is not avaiable in Windows by default,
# try following this guide to activate it: https://github.com/watermarkhu/enable-microsoft-eva-tts
TTS_WINDOWS_VOICE = "Microsoft Eva Mobile - English (United States)"
TTS_WINDOWS_RATE = 170
TTS_WINDOWS_VOLUME = 0.7

# List all the Windows voices available in the system
TTS_WINDOWS_LIST = False

# The URL to the EDSM API to fetch information about the target system
EDSM_API = "https://www.edsm.net"

# Read "Nothing to report" the message the ID use to indicate that there is no information.
TTS_NOTHING_TO_REPORT = False

# The initial prompt sent to the asistant. Can be anything you want to remark globally. Parsers have their own prompts.
SYSTEM_PROMPT = """
You are a computer AI inside my starship in the game Elite Dangerous.
I'm going to provide you events from the ship journal and other relevant data, in compact text format.
Use facts that are related to the game Elite Dangerous and the in-game universe.
Always talk to me directly as Commander.

I wanto you to:
Use natural language. Don't build lists. Don't format the responses.
Warn me about dangers, and tell me why you think there is danger nearby.
Be as brief as possible, accurate as possible and factual as possible with all the information.
Round numbers.
You can reply "Nothing to report." if there is no information or you are instructed to ignore or remain silent.

Common dangers:
Fuel level is low.
Hull integrity is low.
Threat level is high.
System security is low.
A star type is not scoopable
A star type is of a dangerous type.

# Remember this about stars:
Type K (Orange star): scoopable for fuel.
Type G (Yellow star): scoopabl for fuele.
Type B (Blue-White start): scoopable for fuel.
Type F (White star): scoopable for fuel.
Type O (Blue star): scoopable for fuel.
Type A (Blue-White star): scoopable for fuel.
Type M (Red Dwarf): scoopable for fuel.

Type L (Brown dwarf): not scoopable for fuel.
Type T (Brown dwarf): not scoopable for fuel.
Type Y (Brown dwarf): not scoopable for fuel.

Current ship status and position in the galaxy, use as reference:
{current_status}
Note: fuel leves are in units of tons, and the value must be compared to the maximum fuel capacity of the ship.

This is the event to process, remember you can ignore information if instructed or the information is irrelevant:
"""

# Startup Events
STARTUP_EVENTS = {
    "LoadGame": False,
    "NewCommander": False,
    "Missions": False,
    "Statistics": False,
}

# Combat Events
COMBAT_EVENTS = {
    "Died": False,
    "Bounty": True,
    "CapShipBond": True,
    "Interdiction": True,
    "Interdicted": False,
    "EscapeInterdiction": False,
    "FactionKillBond": True,
    "FighterDestroyed": True,
    "HeatDamage": True,
    "HeatWarning": True,
    "HullDamage": True,
    "PVPKill": True,
    "ShieldState": True,
    "ShipTargeted": True,
    "SRVDestroyed": True,
    "UnderAttack": False,
}

# Travel Events
TRAVEL_EVENTS = {
    "CodexEntry": True,
    "ApproachBody": True,
    "Docked": False,
    "DockingCanceled": False,
    "DockingDenied": True,
    "DockingGranted": False,
    "DockingRequested": False,
    "DockingTimeout": False,
    "FSDJump": True,
    "FSDTarget": True,
    "LeaveBody": True,
    "Liftoff": True,
    "StartJump": True,
    "SupercruiseEntry": False,
    "SupercruiseExit": True,
    "Touchdown": True,
    "Undocked": True,
    "NavRoute": True,
    "NavRouteClear": False,
}

# Exploration Events
EXPLORATION_EVENTS = {
    "CodexEntry": True,
    "DiscoveryScan": True,
    "Scan": True,
    "FSSAllBodiesFound": True,
    "FSSBodySignals": False,
    "FSSDiscoveryScan": True,
    "FSSSignalDiscovered": False,
    "MaterialCollected": True,
    "MaterialDiscarded": False,
    "MaterialDiscovered": True,
    "MultiSellExplorationData": False,
    "NavBeaconScan": True,
    "BuyExplorationData": False,
    "SAAScanComplete": False,
    "SAASignalsFound": True,
    "ScanBaryCentre": False,
    "SellExplorationData": False,
    "Screenshot": False,
}

# Trade Events
TRADE_EVENTS = {
    "Trade": False,
    "AsteroidCracked": True,
    "BuyTradeData": False,
    "CollectCargo": True,
    "EjectCargo": True,
    "MarketBuy": False,
    "MarketSell": False,
    "MiningRefined": False,
}

# Station Services Events
STATION_SERVICES_EVENTS = {
    "StationServices": True,
    "BuyAmmo": False,
    "BuyDrones": False,
    "CargoDepot": True,
    "CommunityGoal": True,
    "CommunityGoalDiscard": False,
    "CommunityGoalJoin": False,
    "CommunityGoalReward": False,
    "CrewAssign": False,
    "CrewFire": False,
    "CrewHire": False,
    "EngineerContribution": False,
    "EngineerCraft": True,
    "EngineerLegacyConvert": False,
    "FetchRemoteModule": False,
    "Market": True,
    "MassModuleStore": False,
    "MaterialTrade": True,
    "MissionAbandoned": False,
    "MissionAccepted": False,
    "MissionCompleted": True,
    "MissionFailed": False,
    "MissionRedirected": False,
    "ModuleBuy": False,
    "ModuleRetrieve": False,
    "ModuleSell": False,
    "ModuleSellRemote": False,
    "ModuleStore": False,
    "ModuleSwap": False,
    "Outfitting": False,
    "PayBounties": True,
    "PayFines": True,
    "PayLegacyFines": True,
    "RedeemVoucher": True,
    "RefuelAll": False,
    "RefuelPartial": False,
    "Repair": False,
    "RepairAll": False,
    "RestockVehicle": False,
    "ScientificResearch": True,
}

# Powerplay Events
POWERPLAY_EVENTS = {
    "PowerplayCollect": True,
    "PowerplayDefect": True,
    "PowerplayDeliver": False,
    "PowerplayFastTrack": False,
    "PowerplayJoin": False,
    "PowerplayLeave": False,
    "PowerplaySalary": False,
    "PowerplayVote": False,
    "PowerplayVoucher": False,
}

# Squadron Events
SQUADRON_EVENTS = {
    "AppliedToSquadron": False,
    "DisbandedSquadron": False,
    "InvitedToSquadron": True,
    "JoinedSquadron": False,
    "KickedFromSquadron": True,
    "LeftSquadron": True,
    "SharedBookmarkToSquadron": False,
    "SquadronCreated": False,
    "SquadronDemotion": True,
    "SquadronPromotion": True,
    "WonATrophyForSquadron": False,
}

# Fleet Carrier Events
FLEET_CARRIER_EVENTS = {
    "CarrierJump": True,
    "CarrierBuy": False,
    "CarrierStats": False,
    "CarrierJumpRequest": True,
    "CarrierDecommission": False,
    "CarrierCancelDecommission": False,
    "CarrierBankTransfer": False,
    "CarrierDepositFuel": True,
    "CarrierCrewServices": False,
    "CarrierFinance": False,
    "CarrierShipPack": False,
    "CarrierModulePack": False,
    "CarrierTradeOrder": False,
    "CarrierDockingPermission": False,
    "CarrierNameChanged": False,
    "CarrierJumpCancelled": False,
}

# Odyssey Events
ODYSSEY_EVENTS = {
    "Backpack": False,
    "BackpackChange": False,
    "BookDropship": False,
    "BookTaxi": False,
    "BuyMicroResources": False,
    "BuySuit": True,
    "BuyWeapon": True,
    "CancelDropship": False,
    "CancelTaxi": False,
    "CollectItems": False,
    "CreateSuitLoadout": False,
    "DeleteSuitLoadout": False,
    "Disembark": True,
    "DropItems": False,
    "DropShipDeploy": False,
    "Embark": True,
    "FCMaterials": False,
    "LoadoutEquipModule": False,
    "LoadoutRemoveModule": False,
    "RenameSuitLoadout": False,
    "ScanOrganic": False,
    "SellMicroResources": False,
    "SellOrganicData": False,
    "SellWeapon": False,
    "SwitchSuitLoadout": True,
    "TransferMicroResources": False,
    "TradeMicroResources": False,
    "UpgradeSuit": False,
    "UpgradeWeapon": False,
    "UseConsumable": False,
}

# Other Events
OTHER_EVENTS = {
    "AfmuRepairs": False,
    "ApproachSettlement": True,
    "ChangeCrewRole": False,
    "CockpitBreached": True,
    "CommitCrime": True,
    "Continued": False,
    "CrewLaunchFighter": True,
    "CrewMemberJoins": True,
    "CrewMemberQuits": True,
    "CrewMemberRoleChange": True,
    "CrimeVictim": True,
    "DatalinkScan": True,
    "DatalinkVoucher": False,
    "DataScanned": True,
    "DockFighter": True,
    "DockSRV": True,
    "EndCrewSession": True,
    "FighterRebuilt": True,
    "FuelScoop": True,
    "Friends": True,
    "JetConeBoost": False,
    "JetConeDamage": False,
    "JoinACrew": True,
    "KickCrewMember": True,
    "LaunchDrone": False,
    "LaunchFighter": True,
    "LaunchSRV": True,
    "ModuleInfo": False,
    "NpcCrewRank": False,
    "Promotion": True,
    "ProspectedAsteroid": False,
    "QuitACrew": False,
    "RebootRepair": True,
    "ReceiveText": True,
    "RepairDrone": False,
    "Resurrect": True,
    "Scanned": True,
    "SelfDestruct": True,
    "SendText": False,
    "Shutdown": False,
    "Synthesis": False,
    "SystemsShutdown": False,
    "USSDrop": False,
    "VehicleSwitch": False,
    "WingAdd": False,
    "WingInvite": True,
    "WingJoin": False,
    "WingLeave": False,
    "CargoTransfer": False,
    "SupercruiseDestinationDrop": False,
}

# Status Events
STATUS_EVENTS = {
    "LandingGearUp": False,
    "LandingGearDown": False,
    "FlightAssistOn": False,
    "FlightAssistOff": False,
    "HardpointsRetracted": False,
    "HardpointsDeployed": False,
    "LightsOff": False,
    "LightsOn": False,
    "CargoScoopRetracted": False,
    "CargoScoopDeployed": False,
    "SilentRunningOff": False,
    "SilentRunningOn": False,
    "FuelScoopStarted": False,
    "FuelScoopEnded": False,
    "SrvHandbrakeOff": False,
    "SrvHandbrakeOn": False,
    "SrvTurretViewConnected": False,
    "SrvTurretViewDisconnected": False,
    "SrvDriveAssistOff": False,
    "SrvDriveAssistOn": False,
    "FsdMassLockEscaped": False,
    "FsdMassLocked": False,
    "LowFuelWarningCleared": True,
    "LowFuelWarning": True,
    "OutofDanger": True,
    "InDanger": True,
    "NightVisionOff": False,
    "NightVisionOn": False,
    "LowOxygenWarningCleared": True,
    "LowOxygenWarning": True,
    "LowHealthWarningCleared": True,
    "LowHealthWarning": True,
    "GlideModeExited": False,
    "GlideModeEntered": False,
    "BreathableAtmosphereExited": False,
    "BreathableAtmosphereEntered": False,
    "LegalStateChanged": True,
    "WeaponSelected": False,
}
